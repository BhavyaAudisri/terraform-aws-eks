pipeline{
    agent {
            label 'agent-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')

        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    stages {
        stage('Init and plan') {
            steps {
                withAWS(region:'us-east-1', credentials :'AWS-CREDS') {
                    sh  """
                        cd 70-ecr
                        terraform init --reconfigure
                        terraform plan -out=tfplan
                    """
            }
        }
         }
                
        stage('Apply or Destroy') {
             /* input {
                message "Should we continue to ${params.ACTION}"
                ok "Yes, we should."
            }  */
             steps {
                withAWS(region: 'us-east-1', credentials: 'AWS-CREDS') {
                    sh """
                        cd 70-ecr
                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve tfplan
                        elif [ ${params.ACTION} == 'destroy' ]
                        then
                            terraform destroy -auto-approve
                        fi
                    """
            }
                    }

        }
        
    }
    post {
        always {
            echo " this section runs always"
            deleteDir()
        }
        success {
            echo " this section run when pipeline is success"
        }
        failure {
            echo " this section run when pipeline is failure"
        }
    }
}